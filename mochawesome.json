{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-04T16:06:22.772Z",
    "end": "2020-06-04T16:06:22.772Z",
    "duration": 222517,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b6a2ac07-32cf-4309-9a08-8575f5b7ea22",
      "title": "",
      "fullFile": "cypress/e2e/module.spec.js",
      "file": "cypress/e2e/module.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "405b4c44-de87-4052-bdb1-19401246480a",
          "title": "Module [Test suite]",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user (type trainer) can create and publish module",
              "fullTitle": "Module [Test suite] user (type trainer) can create and publish module",
              "timedOut": null,
              "duration": 17765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('modules').then(function (moduleJsonFile) {\n  _page_objects.module.createAndPublishModule(moduleJsonFile[0]);\n  _page_objects.module.assertModuleHasBeenPublished(moduleJsonFile[0].title);\n  _page_objects.module.archiveModule(0, moduleJsonFile[0].title);\n});",
              "err": {},
              "uuid": "8924593f-c29e-47d4-b563-3764f95489f3",
              "parentUUID": "405b4c44-de87-4052-bdb1-19401246480a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user (type trainer) can not create new module if title and duration not provided",
              "fullTitle": "Module [Test suite] user (type trainer) can not create new module if title and duration not provided",
              "timedOut": null,
              "duration": 13562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_page_objects.module.createAndPublishModule({\n  title: '     ',\n  description: '     ',\n  duration: 0\n});\nvar expectedErrorMessage = 'Estimated Minutes must be filled and Estimated Minutes must be greater than or equal to 0';\n_page_objects.error.assertMissingModuleFormRequiredField(expectedErrorMessage);\ncy.get('[data-purpose=\"delete_button\"]').click();\ncy.get('.swal2-confirm').click();",
              "err": {},
              "uuid": "be9bbb33-d066-46d5-9d1d-2049cee9a4ee",
              "parentUUID": "405b4c44-de87-4052-bdb1-19401246480a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user type (trainer) can add steps to existing module",
              "fullTitle": "Module [Test suite] user type (trainer) can add steps to existing module",
              "timedOut": null,
              "duration": 22174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('modules').then(function (moduleJsonFile) {\n  var moduleDetails = (0, _objectSpread2[\"default\"])({}, moduleJsonFile[0], {\n    title: 'can add steps to module'\n  });\n  _page_objects.module.createAndPublishModule(moduleDetails);\n  _page_objects.module.assertModuleHasBeenPublished(moduleDetails.title);\n  _page_objects.module.updateModule(moduleDetails);\n  _page_objects.module.archiveModule(0, moduleDetails.title);\n});",
              "err": {},
              "uuid": "9ec12d44-4ad6-4359-a98a-f4b08148dffb",
              "parentUUID": "405b4c44-de87-4052-bdb1-19401246480a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user type (trainer) can archive module",
              "fullTitle": "Module [Test suite] user type (trainer) can archive module",
              "timedOut": null,
              "duration": 15025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('modules').then(function (moduleJsonFile) {\n  var moduleDetails = (0, _objectSpread2[\"default\"])({}, moduleJsonFile[0], {\n    title: 'can archive module'\n  });\n  _page_objects.module.createAndPublishModule(moduleDetails);\n  _page_objects.module.assertModuleHasBeenPublished(moduleDetails.title);\n  _page_objects.module.archiveModule(0, moduleDetails.title);\n});",
              "err": {},
              "uuid": "1564897a-7ac8-487d-ae8e-47baf738187c",
              "parentUUID": "405b4c44-de87-4052-bdb1-19401246480a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user type (trainer) can delete existing (draft) module",
              "fullTitle": "Module [Test suite] user type (trainer) can delete existing (draft) module",
              "timedOut": null,
              "duration": 15321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_page_objects.module.createAndPublishModule({\n  title: 'test delete',\n  description: '     ',\n  duration: 0\n});\n_page_objects.navigateTo.viewAllModulesPage();\ncy.get('[data-purpose=\"edit_link\"]').eq(0).click().then(function () {\n  cy.get('[data-purpose=\"delete_button\"]').click();\n  cy.get('.swal2-confirm').click();\n  cy.contains('test delete').should('not.exist');\n});",
              "err": {},
              "uuid": "def2d593-e942-45ad-b887-9b3dfb161e57",
              "parentUUID": "405b4c44-de87-4052-bdb1-19401246480a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8924593f-c29e-47d4-b563-3764f95489f3",
            "be9bbb33-d066-46d5-9d1d-2049cee9a4ee",
            "9ec12d44-4ad6-4359-a98a-f4b08148dffb",
            "1564897a-7ac8-487d-ae8e-47baf738187c",
            "def2d593-e942-45ad-b887-9b3dfb161e57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 83847,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75b9051a-ccae-4654-b4c1-75fb2e618431",
      "title": "",
      "fullFile": "cypress/e2e/training.spec.js",
      "file": "cypress/e2e/training.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "94fca622-621d-4890-912d-dca9499a310b",
          "title": "Training [Test suite]",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user (type trainer) can create new training",
              "fullTitle": "Training [Test suite] user (type trainer) can create new training",
              "timedOut": null,
              "duration": 29944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('modules').then(function (moduleJsonFile) {\n  var moduleDetails = (0, _objectSpread2[\"default\"])({}, moduleJsonFile[1], {\n    title: 'Can add module to training'\n  });\n  _page_objects.module.createAndPublishModule(moduleDetails);\n  cy.fixture('trainings').then(function (trainingJsonFile) {\n    _page_objects.training.addInformation(trainingJsonFile[0]);\n    _page_objects.training.nextStep();\n    _page_objects.training.addModule(moduleDetails, 'Learning');\n    _page_objects.training.nextStep();\n    _page_objects.training.publish();\n  });\n  _page_objects.training.assertTrainingDetailsPage();\n  _page_objects.navigateTo.viewAllTrainingPage();\n  _page_objects.training.archiveTraining();\n  _page_objects.navigateTo.viewAllModulesPage();\n  _page_objects.module.archiveModule(0, moduleDetails.title);\n});",
              "err": {},
              "uuid": "b18e11e3-f26e-4bfe-afc6-69a4430b4f6d",
              "parentUUID": "94fca622-621d-4890-912d-dca9499a310b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user (type trainer) can not create new training without adding at least one module",
              "fullTitle": "Training [Test suite] user (type trainer) can not create new training without adding at least one module",
              "timedOut": null,
              "duration": 44734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('modules').then(function (moduleJsonFile) {\n  var moduleDetails = (0, _objectSpread2[\"default\"])({}, moduleJsonFile[1], {\n    title: 'Did not add module to training'\n  });\n  _page_objects.module.createAndPublishModule(moduleDetails);\n  cy.fixture('trainings').then(function (trainingJsonFile) {\n    _page_objects.training.addInformation(trainingJsonFile[1]);\n    _page_objects.training.nextStep();\n    _page_objects.training.publish();\n    var expectedErrorMessage = 'Training Modules must be filled and Training Modules size cannot be less than 1';\n    _page_objects.error.assertTrainingModuleMissing(expectedErrorMessage);\n  });\n  _page_objects.training.deleteDraft();\n  _page_objects.navigateTo.viewAllModulesPage();\n  _page_objects.module.archiveModule(0, moduleDetails.title);\n});",
              "err": {},
              "uuid": "f846aec7-31b0-48a4-a10b-44f47ffad307",
              "parentUUID": "94fca622-621d-4890-912d-dca9499a310b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user (type trainer) can add learner to training",
              "fullTitle": "Training [Test suite] user (type trainer) can add learner to training",
              "timedOut": null,
              "duration": 49740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('modules').then(function (moduleJsonFile) {\n  var moduleDetails = (0, _objectSpread2[\"default\"])({}, moduleJsonFile[1], {\n    title: 'Can add module to training'\n  });\n  _page_objects.module.createAndPublishModule(moduleDetails);\n  cy.fixture('trainings').then(function (trainingJsonFile) {\n    _page_objects.training.addInformation(trainingJsonFile[0]);\n    _page_objects.training.nextStep();\n    _page_objects.training.addModule(moduleDetails, 'Learning');\n    _page_objects.training.nextStep();\n    _page_objects.training.publish();\n  });\n  _page_objects.training.assertTrainingDetailsPage();\n  _page_objects.training.addLearner(['Michael Albert', 'Michael Albert']);\n  _page_objects.navigateTo.viewAllTrainingPage();\n  _page_objects.training.archiveTraining();\n  _page_objects.navigateTo.viewAllModulesPage();\n  _page_objects.module.archiveModule(0, moduleDetails.title);\n});",
              "err": {},
              "uuid": "b80295e9-404c-4b0d-a8be-c3230a627e65",
              "parentUUID": "94fca622-621d-4890-912d-dca9499a310b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b18e11e3-f26e-4bfe-afc6-69a4430b4f6d",
            "f846aec7-31b0-48a4-a10b-44f47ffad307",
            "b80295e9-404c-4b0d-a8be-c3230a627e65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 124418,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aee011d0-b360-448a-9548-e5b5ffd023cc",
      "title": "",
      "fullFile": "cypress/e2e/login.spec.js",
      "file": "cypress/e2e/login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3f8821f9-d29f-439c-bcf8-b1249e3db98f",
          "title": "Login page [Test suite]",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should log in an existing user with valid email/password",
              "fullTitle": "Login page [Test suite] should log in an existing user with valid email/password",
              "timedOut": null,
              "duration": 10211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var email = Cypress.env('email');\nvar password = Cypress.env('password');\n_page_objects.auth.login({\n  email: email,\n  password: password\n});\ncy.assertDashboardDisplayed();\n_page_objects.auth.assertLoggedInUser();",
              "err": {},
              "uuid": "ef247f79-2831-434a-aa49-beef44a3bfc0",
              "parentUUID": "3f8821f9-d29f-439c-bcf8-b1249e3db98f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error message if email/password are incorrect",
              "fullTitle": "Login page [Test suite] should display error message if email/password are incorrect",
              "timedOut": null,
              "duration": 4041,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var email = 'invalid';\nvar password = 'invalid';\n_page_objects.auth.login({\n  email: email,\n  password: password\n});\nvar expectedErrorMessage = 'Courriel ou mot de passe incorrect';\n_page_objects.error.assertInvalidEmailAndPassword(expectedErrorMessage);",
              "err": {},
              "uuid": "9a9bc0f2-7e9a-4fbc-9c52-f0ffc3370496",
              "parentUUID": "3f8821f9-d29f-439c-bcf8-b1249e3db98f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef247f79-2831-434a-aa49-beef44a3bfc0",
            "9a9bc0f2-7e9a-4fbc-9c52-f0ffc3370496"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}